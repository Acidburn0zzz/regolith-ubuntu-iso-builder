name: build-from-tag

on:
  push:
    tags:
      - 'release-*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Parse Tag
        id: parse_tag
        run: |
          TAG=${GITHUB_REF#refs/tags/release-}
          RELEASE_STAGE=$(echo $TAG | cut -d- -f1)
          RELEASE_SUITE=$(echo $TAG | cut -d- -f2)
          RELEASE_VARIANT=$(echo $TAG | cut -d- -f2)
          RELEASE_VERSION=$(echo $TAG | cut -d- -f3)
          ISO_FILENAME="scripts/Regolith_${RELEASE_VERSION}_${RELEASE_SUITE}.iso"
          echo ::set-output name=TAG_LABEL::$TAG
          echo ::set-output name=RELEASE_STAGE::$RELEASE_STAGE
          echo ::set-output name=RELEASE_SUITE::$RELEASE_SUITE
          echo ::set-output name=RELEASE_VARIANT::$RELEASE_VARIANT
          echo ::set-output name=RELEASE_VERSION::$RELEASE_VERSION
          echo ::set-output name=ISO_FILENAME::$ISO_FILENAME
      - name: Get Release Notes
        env:
          RELEASE_VERSION: ${{ steps.parse_tag.outputs.RELEASE_VERSION }}
        run: |
          wget -O release-notes.md https://github.com/regolith-linux/website/raw/v2/content/en/docs/Reference/Releases/regolith-${RELEASE_VERSION}-release-notes.md 
      - name: Build ISO
        env:
          RELEASE_STAGE: ${{ steps.parse_tag.outputs.RELEASE_STAGE }}
          RELEASE_VARIANT: ${{ steps.parse_tag.outputs.RELEASE_VARIANT }}
        run: |
          cd scripts
          cp config-$RELEASE_VARIANT.sh config.sh
          sed -i -e "s/ppa:regolith-linux\/unstable/ppa:regolith-linux\/$RELEASE_STAGE/g" config.sh
          ./build.sh -
      - name: Hash Artifacts
        env:
          ISO_FILENAME: ${{ steps.parse_tag.outputs.ISO_FILENAME }}
        run: |
          sha256sum $ISO_FILENAME > scripts/SHA256SUMS
          md5sum $ISO_FILENAME > scripts/MD5SUMS
      - name: Release
      #https://github.com/regolith-linux/website/raw/v2/content/en/docs/Reference/Releases/regolith-1.4-release-notes.md
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_LABEL: ${{ steps.parse_tag.outputs.TAG_LABEL }}
          ISO_FILENAME: ${{ steps.parse_tag.outputs.ISO_FILENAME }}
        if: startsWith(github.ref, 'refs/tags/release')
        with:      
          body_path: release-notes.md
          files: |
            scripts/*.iso
            scripts/SHA256SUMS
            scripts/MD5SUMS
